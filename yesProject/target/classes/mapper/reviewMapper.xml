<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="review">
	<resultMap id="reviewVo"
		type="com.bit.yes.model.entity.ReviewVo">
	</resultMap>

	<resultMap id="commentVo"
		type="com.bit.yes.model.entity.CommentVo">

	</resultMap>


	<select id="selectThumbnail" parameterType="int"
		resultType="String">
		SELECT imageName FROM reviewImages WHERE reviewIndex=#{val}
		AND imageName
		LIKE "m_%"
	</select>

	<select id="selectOneComment" parameterType="int"
		resultType="com.bit.yes.model.entity.CommentVo">
		select * from reviewComment where commentIndex=#{val}
	</select>

	<select id="selectReviewSubImgs"
		resultType="com.bit.yes.model.entity.ImageVo">
		select * from reviewImages where not imageName like 'm_%'
		and
		reviewIndex=#{val}
	</select>

	<select id="selectReviewMainImgs"
		resultType="com.bit.yes.model.entity.ImageVo">
		select * from reviewImages where imageName like 'm_%' and
		reviewIndex=#{val}
	</select>

	<select id="selectOneReview"
		resultType="com.bit.yes.model.entity.ReviewVo">
		select * from reviewBoard where reviewIndex=#{val}
	</select>

	<select id="selectListComment" parameterType="int"
		resultType="com.bit.yes.model.entity.CommentVo">
		select * from reviewComment where reviewIndex=#{value}
		order by commentIndex
		desc
	</select>
	<delete id="deleteReview" parameterType="int">
		delete from reviewBoard
		where reviewIndex=#{val};
	</delete>

	<delete id="deleteReveiwImage" parameterType="int">
		delete from
		reviewImages where reviewIndex=#{val};
	</delete>

	<delete id="deleteReviewComment" parameterType="Map">
		delete from reviewComment
		where
		<if test="commentIndex > 0"> commentIndex=#{commentIndex} </if>
		<if test="reviewIndex > 0"> reviewIndex=#{reviewIndex} </if>
	</delete>

	<insert id="insertReview"
		parameterType="com.bit.yes.model.entity.ReviewVo">
		insert into reviewBoard (branchID, clientID, title,
		content, registeredDate,
		rating)
		values(#{branchID}, #{clientID},
		#{title}, #{content}, current_timestamp(), #{rating})
	</insert>
	<insert id="insertReviewComment"
		parameterType="com.bit.yes.model.entity.CommentVo">
		insert into reviewComment (reviewIndex, comment,
		clientID, registeredDate)
		values (#{reviewIndex}, #{comment},
		#{clientID}, current_timestamp())
	</insert>


	<insert id="insertReviewImage"
		parameterType="com.bit.yes.model.entity.ImageVo">
		insert into reviewImages values (
		<choose>
			<when test="reviewIndex == 0">
				(select
				max(reviewIndex) from reviewBoard)
			</when>
			<otherwise>
				#{reviewIndex}
			</otherwise>
		</choose>
		,#{imageName})
	</insert>

	<update id="updateReview"
		parameterType="com.bit.yes.model.entity.ReviewVo">
		update reviewBoard set title=#{title}, rating=#{rating},
		content=#{content} where reviewIndex=#{reviewIndex}
	</update>
	<insert id="insertReviewLike"
		parameterType="com.bit.yes.model.entity.LikeVo">
		insert into reviewLike values(#{reviewIndex},
		#{clientID},
		#{checked},
		current_timestamp())
	</insert>

	<select id="selectReviewLikeCount" resultType="int"
		parameterType="com.bit.yes.model.entity.LikeVo">
		select count(*) from reviewLike where
		reviewIndex=#{reviewIndex} and
		checked=true
	</select>

	<select id="selectReviewLike"
		resultType="com.bit.yes.model.entity.LikeVo"
		parameterType="com.bit.yes.model.entity.LikeVo">
		select * from reviewLike where clientID=#{clientID} and
		reviewIndex=#{reviewIndex}
	</select>
	<update id="reviewChangeLike" parameterType="hashmap">
		<choose>
			<when test="checked == true">
				update reviewLike set checked=true where
				reviewIndex=#{bean.reviewIndex}
				and clientID=#{bean.clientID}
			</when>
			<when test="checked == false">
				update reviewLike set checked=false where
				reviewIndex=#{bean.reviewIndex}
				and clientID=#{bean.clientID}
			</when>
		</choose>
	</update>

	<delete id="deleteReviewLike"
		parameterType="com.bit.yes.model.entity.LikeVo">
		delete from reviewLike where reviewIndex=#{reviewIndex}
		and clientID=#{clientID}
	</delete>
	<update id="updateReviewComment"
		parameterType="com.bit.yes.model.entity.CommentVo">
		update reviewComment set comment=#{comment} where
		commentIndex=#{commentIndex}
	</update>
	<select id="selectRating" parameterType="string"
		resultType="int">
		select rating from reviewBoard where branchID = #{branchId}
	</select>

	<select id="selectReviewSearch"
		resultType="com.bit.yes.model.entity.ReviewVo">
		<![CDATA[
			select * from reviewBoard where reviewIndex > 0 
		]]>

		<include refid="reviewSearch"></include>
		
		<![CDATA[
			order by reviewIndex desc limit #{pageStart}, #{perPageNum} 
		]]>

	</select>



	<select id="selectReviewSearchCount" resultType="int">
		<![CDATA[
			select count(*) from reviewBoard where reviewIndex > 0
		]]>
		<include refid="reviewSearch"></include>
	</select>




	<select id="selectBranchReview"
		resultType="com.bit.yes.model.entity.ReviewVo">
		<![CDATA[
			select * from reviewBoard where reviewIndex > 0 and branchID=#{branchID}
		]]>

		<include refid="reviewSearch"></include>
		
		<![CDATA[
			order by reviewIndex desc limit #{pageStart}, #{perPageNum} 
		]]>
	</select>

	<select id="selectBranchReviewCount" resultType="int">
	<![CDATA[
		select count(*) from reviewBoard where reviewIndex > 0 and branchID=#{branchID}
		]]>
		<include refid="reviewSearch"></include>
	</select>


	<select id="selectReviewCriteria"
		resultType="com.bit.yes.model.entity.ReviewVo">
		<![CDATA[
		select * from reviewBoard order by reviewIndex desc limit #{pageStart}, #{perPageNum}
		]]>
	</select>

	<select id="selectCriteriaCount" parameterType="int"
		resultType="int">
		<![CDATA[
		select count(*) from reviewBoard where reviewIndex > 0
		]]>
	</select>

	<select id="selectCommentCriteria"
		parameterType="com.bit.yes.model.entity.CommentVo"
		resultType="com.bit.yes.model.entity.CommentVo">
  		
  		<![CDATA[
  			select * from reviewComment where reviewIndex=#{reviewIndex} order by commentIndex desc limit #{pageStart}, #{perPageNum}			
  		]]>

	</select>


	<select id="selectCommentPagingCount" parameterType="int"
		resultType="int">
		<![CDATA[
			select count(commentIndex) from reviewComment where commentIndex > 0 and reviewIndex =#{val}
		]]>
	</select>


	<sql id="reviewSearch">
		<if test="searchType != null">
			<if test="searchType == 't'.toString()">
				and title like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'c'.toString()">
				and content like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'w'.toString()">
				and clientID like CONCAT('%', #{keyword}, '%')
			</if>
			<if test="searchType == 'tc'.toString()">
				and (title like CONCAT('%',#{keyword}, '%') or content
				like CONCAT('%',
				#{keyword}, '%'))
			</if>
			<if test="searchType == 'cw'.toString()">
				and (content like CONCAT('%',#{keyword}, '%') or clientID
				like
				CONCAT('%', #{keyword}, '%'))
			</if>
			<if test="searchType == 'tcw'.toString()">
				and (title like CONCAT('%', #{keyword}, '%') or content
				like
				CONCAT('%',#{keyword}, '%') or clientID like CONCAT('%',
				#{keyword},
				'%'))
			</if>
		</if>
	</sql>


</mapper>
